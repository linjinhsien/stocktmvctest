@using X.PagedList
@using X.PagedList.Mvc.Core
@model IEnumerable<WebApplication2.Models.Stockjson>

@{
    Layout = null;
}
<link href="~/css/PagedList.css" rel="stylesheet" />
<!DOCTYPE html>
<html lang="zh-TW">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>股票列表</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
</head>
<body>
    
    <div class="container mt-4">
        <button id="importButton" class="btn btn-primary">重新匯入資料</button>

        <div id="message"></div>

        <h2 class="mb-4">股票列表</h2>
<p>
            <a asp-action="Create" class="btn btn-primary">新增股票</a>
</p>
        <table class="table table-striped table-hover">
            <thead class="thead-dark">
        <tr>
                    <th>@Html.DisplayNameFor(model => model.Name)</th>
                    <th>@Html.DisplayNameFor(model => model.Peratio)</th>
                    <th>@Html.DisplayNameFor(model => model.DividendYield)</th>
                    <th>@Html.DisplayNameFor(model => model.Pbratio)</th>
                    <th>操作</th>
        </tr>
    </thead>
    <tbody>
                @foreach (var item in Model)
                {
        <tr>
                        <td>@Html.DisplayFor(modelItem => item.Name)</td>
                        <td>@Html.DisplayFor(modelItem => item.Peratio)</td>
                        <td>@Html.DisplayFor(modelItem => item.DividendYield)</td>
                        <td>@Html.DisplayFor(modelItem => item.Pbratio)</td>
            <td>
                            <a asp-action="Edit" asp-route-id="@item.Code" class="btn btn-sm btn-outline-primary">編輯</a>
                            <a asp-action="Details" asp-route-id="@item.Code" class="btn btn-sm btn-outline-info">詳情</a>
                            <a asp-action="Delete" asp-route-id="@item.Code" class="btn btn-sm btn-outline-danger">刪除</a>
            </td>
        </tr>
}
    </tbody>
</table>

        @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }),
                 new PagedListRenderOptions
        {
            LiElementClasses = new string[] { "page-item" },
            PageClasses = new string[] { "page-link" }
        })
    </div>
    
    <script>
        document.getElementById('importButton').addEventListener('click', function () {
            fetch('@Url.Action("ImportJson", "Stockjsons")', { method: 'POST' })
                .then(response => response.json())
                .then(data => {
                    document.getElementById('message').textContent = data.message;
                    setTimeout(() => {
                        window.location.href = data.redirectUrl;
                    }, 5000);
                })
                .catch(error => {
                    console.error('Error:', error);
                    document.getElementById('message').textContent = '匯入過程中發生錯誤';
                });
        });
        </script>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>
